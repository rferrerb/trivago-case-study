kind: PersistentVolume
apiVersion: v1
metadata:
  name: jenkins
  labels:
    type: local
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/jenkins/"

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jenkins-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: default
automountServiceAccountToken: true

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: Jenkins-cluster-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: default

---

apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: kubectl-jenkins-context
data:
  kubectl-config-context.sh: |-
    #!/bin/bash -v
    kubectl config set-credentials jenkins --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
    kubectl config set-cluster k8s-local --server="https://192.168.99.100:6443" --certificate-authority="/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    kubectl config set-context jenkins-k8s-local --cluster=k8s-local --user=jenkins --namespace=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
    kubectl config use-context jenkins-k8s-local
    chmod 755 ~/.kube/config
---

